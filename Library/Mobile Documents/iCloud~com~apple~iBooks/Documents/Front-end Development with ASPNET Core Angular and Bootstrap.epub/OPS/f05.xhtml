<html xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" epub:prefix="index: http://www.index.com/" lang="en" xml:lang="en"> 
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 
      <title>FOREWORD</title> 
      <link href="WileyTemplate_v5.3.css" rel="stylesheet" type="text/css" />
      
      <meta content="urn:uuid:68078093-7b10-42b9-8f32-0db0ecece3d2" name="Adept.expected.resource" /> 
   </head> 
   <body epub:type="frontmatter">
      <section epub:type="foreword">
         <header>
            <h1><span epub:type="pagebreak" id="Page_xxv" title="xxv"></span><a id="fm8"></a>FOREWORD
            </h1>
         </header>
         
         <section><span id="f8-sec-0001"></span>
            
            <p>The web becomes an increasingly capable platform with each new browser release. Tomorrow’s
               new features become available to early adopters while yesterday’s stabilize for mass
               adoption. This ever‐growing toolbox of HTML, CSS, and JavaScript capabilities seems
               to be accelerating and shows no signs of slowing down. In fact, it’s growing so fast
               that specialized tooling is required to take advantage of these new features—tooling
               such as WebPack and Gulp.
            </p>
            
            <p>The amount of knowledge required to build modern browser applications is illustrated
               by the new job title “front‐end engineer”—a term that didn’t exist just a few years
               ago.
            </p>
            
            <p>In addition to the advances in the web platform, the server‐side technologies powering
               the web are evolving as well. To provide the best experience for both end‐users and
               web developers, the server‐side platform must be ultra‐fast, secure, cross‐platform,
               and cloud scalable, and it must have great tooling.
            </p>
            
            <p>Most web applications consist of client‐side code running in the browser and server‐side
               code running on one or more servers. To be a proficient web developer, it is necessary
               to know <i>enough</i> of both client and server technologies, and that is a big challenge. Because how
               much is <i>enough</i>, and how much time should we devote to continuously learning?
            </p>
            
            <p>One way to make it easier for ourselves is to choose the right set of frameworks and
               tools to build our applications upon. Frameworks are useful because they usually wrap
               complex platform features into easy‐to‐use components, so web developers can focus
               on writing their applications’ logic instead of all the plumbing needed to work with
               the browser or server platforms.
            </p>
            
            <p>Choosing the right frameworks is important. The options are many, but there are a
               few that have shown to be particularly well‐suited for building modern web applications.
               ASP.NET Core as the application framework for the server and Angular for the client
               is a great combination. Bootstrap makes sure the app looks good in all browsers and
               on all types of devices.
            </p>
            
            <p>Simone has done a great job showing how these frameworks complement each other and
               how tooling provides a solid development experience. In the fast‐moving world of web
               development, it is good that we have books like this to give us a pragmatic approach
               to building web applications using the latest and greatest in both client and server
               technologies.
            </p>
            
            <p class="right"><span>MADS KRISTENSEN</span></p>
            
         </section>
         
      </section>
      
   </body>
   
</html>